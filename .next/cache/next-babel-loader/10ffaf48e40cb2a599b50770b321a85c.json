{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/lib/cartState.js\";\nimport { createContext, useContext, useState } from \"react\";\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  //this is a custom provider(store data and \n  //functionality(updaters) and anyone can access it through the consumer)\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      setCartOpen,\n      toggleCart,\n      closeCart,\n      openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n} //custom hook for accessing the cart local state \n\n\nfunction useCart() {\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAACC,EAAAA;AAAD,CAA3B,EAAsC;AACpC;AACA;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASQ,UAAT,GAAqB;AACnBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASG,SAAT,GAAoB;AAClBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAASG,QAAT,GAAmB;AACjBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAEH,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AACPD,MAAAA,QADO;AAEPC,MAAAA,WAFO;AAGPC,MAAAA,UAHO;AAIPC,MAAAA,SAJO;AAKPC,MAAAA;AALO,KADT;AAAA,cAQKL;AARL;AAAA;AAAA;AAAA;AAAA,UADF;AAYC,C,CAED;;;AACA,SAASM,OAAT,GAAkB;AAChB,QAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACD;;AACD,SAASR,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({children}){\n  //this is a custom provider(store data and \n  //functionality(updaters) and anyone can access it through the consumer)\n\n  const [cartOpen, setCartOpen] = useState(false);\n  \n  function toggleCart(){\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart(){\n    setCartOpen(false);\n  }\n\n  function openCart(){\n    setCartOpen(true);\n  }\n\nreturn (\n  <LocalStateProvider \n    value={{ \n    cartOpen, \n    setCartOpen, \n    toggleCart, \n    closeCart, \n    openCart  }}\n    >\n      {children}\n  </LocalStateProvider>\n  );\n}\n\n//custom hook for accessing the cart local state \nfunction useCart(){\n  const all = useContext(LocalStateContext);\n  return all;\n}\nexport { CartStateProvider, useCart };"]},"metadata":{},"sourceType":"module"}