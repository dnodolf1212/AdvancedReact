{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/CreateProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    #variables and types should be defined here\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: {\n          create: {image: $image, altText: $name }}\n      }\n    ) {\n      id \n      price \n      description\n      name\n    }\n  }\n`;\nexport default function CreateProduct() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    image: '',\n    name: \"Hot taters\",\n    price: 1234,\n    description: \"Ratchet but couturrrr\"\n  });\n  const [createProduct, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs\n  });\n  console.log(createProduct);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n      console.log(inputs);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" + Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/CreateProduct.js"],"names":["useMutation","gql","useForm","Form","CREATE_PRODUCT_MUTATION","CreateProduct","inputs","handleChange","clearForm","resetForm","image","name","price","description","createProduct","loading","error","data","variables","console","log","e","preventDefault"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form'\n\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    #variables and types should be defined here\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: {\n          create: {image: $image, altText: $name }}\n      }\n    ) {\n      id \n      price \n      description\n      name\n    }\n  }\n`;\n\nexport default function CreateProduct() {\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    image: '',\n    name: \"Hot taters\",\n    price: 1234,\n    description: \"Ratchet but couturrrr\"\n  });\n\n  const [createProduct, { loading, error, data }] = useMutation(\n    CREATE_PRODUCT_MUTATION, \n    {\n      variables: inputs,\n    });\n    console.log(createProduct)\n\n  return (\n\n    <Form onSubmit={(e) => {\n      e.preventDefault();\n      console.log(inputs);\n    }}>\n      <fieldset>\n      <label htmlFor=\"image\">\n          Image\n          <input \n            required\n            type=\"file\" \n            id=\"image\" \n            name=\"image\" \n            onChange={handleChange}\n            />\n        </label>\n\n        <label htmlFor=\"name\">\n          Name\n          <input \n            type=\"text\" \n            id=\"name\" \n            name=\"name\" \n            placeholder=\"Name\" \n            value={inputs.name}\n            onChange={handleChange}\n            />\n        </label>\n\n        <label htmlFor=\"price\">\n          Price\n          <input \n            type=\"number\" \n            id=\"price\" \n            name=\"price\" \n            placeholder=\"Price\" \n            value={inputs.price}\n            onChange={handleChange}\n            />\n        </label>\n\n        <label htmlFor=\"description\">\n          Description\n          <textarea \n            type=\"text\" \n            id=\"description\" \n            name=\"description\" \n            placeholder=\"Description\" \n            value={inputs.description}\n            onChange={handleChange}\n            />\n        </label>\n\n        <button type=\"submit\"> + Add Product</button>\n      </fieldset>\n    </Form>\n  );\n}"]},"metadata":{},"sourceType":"module"}