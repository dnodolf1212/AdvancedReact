{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\";\nimport Product from \"./Product\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/client\";\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: {id: $id}) {\n      id\n      name \n      description \n      price \n    }\n  }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String \n    $description: String \n    $price: Int \n  ) {\n    updateProduct(\n      id: $id \n      data: \n    )\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  //get existing product\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  }); //get mutation to update \n  //make a form to hande updates\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update!! \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 8\n  }, this);\n}","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["Product","gql","useQuery","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,oBAAoB,GAAGF,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMG,uBAAuB,GAAGH,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASI,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC5C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACC,oBAAD,EAAuB;AAC9DO,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADmD,GAAvB,CAAzC,CAF4C,CAM5C;AACA;;AACF,sBAAO;AAAA,4BAAaA,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACC","sourcesContent":["import Product from \"./Product\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/client\";\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: {id: $id}) {\n      id\n      name \n      description \n      price \n    }\n  }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String \n    $description: String \n    $price: Int \n  ) {\n    updateProduct(\n      id: $id \n      data: \n    )\n  }\n`;\n\nexport default function UpdateProduct({ id }) {\n  //get existing product\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: { id },\n\n  });\n  //get mutation to update \n  //make a form to hande updates\nreturn <p>Update!! {id}</p>\n}"]},"metadata":{},"sourceType":"module"}