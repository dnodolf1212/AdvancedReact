{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\\n  allProducts(first: $first, skip: $skip) {\\n    id\\n    name\\n    price \\n    description\\n    photo {\\n      id\\n      image {\\n        publicUrlTransformed\\n      }\\n    }\\n  }\\n}\\n \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from 'styled-components';\nimport Product from '../components/Product';\nimport { perPage } from '../config';\nexport var ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\n_c = ProductsListStyles;\nexport default function Products(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Hold on one moment...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsListStyles\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["gql","useQuery","styled","Product","perPage","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","variables","skip","first","data","error","loading","message","allProducts","map","product","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,IAAMC,kBAAkB,GAAGL,GAAH,mBAAxB;AAiBP,IAAMM,kBAAkB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAxB;KAAMD,kB;AAML,eAAe,SAASE,QAAT,OAA4B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACRR,QAAQ,CAACI,kBAAD,EAAqB;AAC5DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEF,IAAI,GAAGL,OAAP,GAAiBA,OADd;AAETQ,MAAAA,KAAK,EAAER;AAFE;AADiD,GAArB,CADA;AAAA,MACjCS,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,OADoB,aACpBA,OADoB;;AAQzC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BACpB,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA;AAAnC,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnBuBZ,Q;UACWP,Q;;;MADXO,Q","sourcesContent":["import gql from \"graphql-tag\"\nimport { useQuery } from \"@apollo/client\"\nimport styled from 'styled-components'\nimport Product from '../components/Product'\nimport { perPage } from '../config';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n  allProducts(first: $first, skip: $skip) {\n    id\n    name\n    price \n    description\n    photo {\n      id\n      image {\n        publicUrlTransformed\n      }\n    }\n  }\n}\n `\n \nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n `;\n\n export default function Products({ page }) {\n   const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\n     variables: {\n       skip: page * perPage - perPage,\n       first: perPage\n     }\n   });\n   \n   if (loading) return <p>Hold on one moment...</p>;\n   if (error) return <p>Error: {error.message}</p>\n   return (\n     <div>\n       <ProductsListStyles>\n         {data.allProducts.map((product) => (\n           <Product key={product.id} product={product} />\n         ))}\n       </ProductsListStyles>\n     </div>\n   )\n }"]},"metadata":{},"sourceType":"module"}