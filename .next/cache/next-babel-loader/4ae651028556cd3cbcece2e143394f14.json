{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: {id: $id}) {\\n      id\\n      name \\n      description \\n      price \\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Product from \"./Product\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/client\";\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  //get existing product\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data); //get mutation to update \n  //make a form to hande updates\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update!! \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n}\n\n_s(UpdateProduct, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["Product","gql","useQuery","SINGLE_PRODUCT_QUERY","UpdateProduct","id","variables","data","error","loading","console","log"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;AAWA,eAAe,SAASG,aAAT,OAA+B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAC5C;AAD4C,kBAEXH,QAAQ,CAACC,oBAAD,EAAuB;AAC9DG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADmD,GAAvB,CAFG;AAAA,MAEpCE,IAFoC,aAEpCA,IAFoC;AAAA,MAE9BC,KAF8B,aAE9BA,KAF8B;AAAA,MAEvBC,OAFuB,aAEvBA,OAFuB;;AAO5CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAP4C,CAQ5C;AACA;;AACF,sBAAO;AAAA,4BAAaF,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACC;;GAXuBD,a;UAEWF,Q;;;KAFXE,a","sourcesContent":["import Product from \"./Product\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/client\";\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: {id: $id}) {\n      id\n      name \n      description \n      price \n    }\n  }\n`;\n\nexport default function UpdateProduct({ id }) {\n  //get existing product\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: { id },\n\n  });\n\n  console.log(data)\n  //get mutation to update \n  //make a form to hande updates\nreturn <p>Update!! {id}</p>\n}"]},"metadata":{},"sourceType":"module"}