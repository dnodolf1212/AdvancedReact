{"ast":null,"code":"import _slicedToArray from \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/DeleteProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\\n    deleteProduct(id: $id) {\\n      id \\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nvar DELETE_PRODUCT_MUTATION = gql(_templateObject());\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log('Running update function after delete');\n  cache.evict(cache.identify(payload.data.deleteProduct));\n}\n\nexport default function DeleteProduct(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteProduct = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm('Are you sure delete is what you want to do??')) {\n        //run a delete function\n        console.log(\"DELETING!!!!!!!!\");\n        deleteProduct()[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteProduct, \"MAc2BuRR5i/aF3CQ0o0/sj++Nvs=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProduct\");","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/DeleteProduct.js"],"names":["gql","useMutation","DELETE_PRODUCT_MUTATION","update","cache","payload","console","log","evict","identify","data","deleteProduct","DeleteProduct","id","children","variables","loading","confirm","err","alert","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,IAAMC,uBAAuB,GAAGF,GAAH,mBAA7B;;AASA,SAASG,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,aAA5B,CAAZ;AACD;;AAED,eAAe,SAASC,aAAT,OAAyC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,qBACjBb,WAAW,CAACC,uBAAD,EAA0B;AACxEa,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KAD6D;AAExEV,IAAAA,MAAM,EAAEA;AAFgE,GAA1B,CADM;AAAA;AAAA,MAC/CQ,aAD+C;AAAA,MAC9BK,OAD8B,oBAC9BA,OAD8B;;AAMtD,sBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AACA,IAAA,QAAQ,EAAEA,OADV;AAEA,IAAA,OAAO,EAAE,mBAAM;AACb,UAAKC,OAAO,CAAC,8CAAD,CAAZ,EAA+D;AAC/D;AACEX,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAI,QAAAA,aAAa,WAAb,CAAsB,UAAAO,GAAG;AAAA,iBAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAT;AAAA,SAAzB;AACD;AACJ,KARC;AAAA,cASCN;AATD;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnBuBF,a;UACeX,W;;;KADfW,a","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id \n      name\n    }\n  }\n`;\n\nfunction update(cache, payload){\n  console.log(payload);\n  console.log('Running update function after delete');\n  cache.evict(cache.identify(payload.data.deleteProduct))\n}\n\nexport default function DeleteProduct({ id, children }) {\n  const [deleteProduct, { loading }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: { id }, \n    update: update\n  });\n\n  return (\n    <button type=\"button\" \n    disabled={loading}\n    onClick={() => {\n      if ( confirm('Are you sure delete is what you want to do??') ) {\n      //run a delete function\n        console.log(\"DELETING!!!!!!!!\")\n        deleteProduct().catch(err => alert(err.message))\n      }\n  }}>\n    {children}\n  </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}