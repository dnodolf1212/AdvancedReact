{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/DeleteProduct.js\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id \n      name\n    }\n  }\n`;\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log('Running update function after delete');\n  cache.evict(cache.identify(payload.data.deleteProduct));\n}\n\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteProduct, {\n    loading\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    },\n    update: update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm('Are you sure delete is what you want to do??')) {\n        //run a delete function\n        console.log(\"DELETING!!!!!!!!\");\n        deleteProduct().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/components/DeleteProduct.js"],"names":["gql","useMutation","DELETE_PRODUCT_MUTATION","update","cache","payload","console","log","evict","identify","data","deleteProduct","DeleteProduct","id","children","loading","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,uBAAuB,GAAGF,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASG,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,aAA5B,CAAZ;AACD;;AAED,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAyC;AACtD,QAAM,CAACH,aAAD,EAAgB;AAAEI,IAAAA;AAAF,GAAhB,IAA+Bd,WAAW,CAACC,uBAAD,EAA0B;AACxEc,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF,KAD6D;AAExEV,IAAAA,MAAM,EAAEA;AAFgE,GAA1B,CAAhD;AAKA,sBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AACA,IAAA,QAAQ,EAAEY,OADV;AAEA,IAAA,OAAO,EAAE,MAAM;AACb,UAAKE,OAAO,CAAC,8CAAD,CAAZ,EAA+D;AAC/D;AACEX,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAI,QAAAA,aAAa,GAAGO,KAAhB,CAAsBC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAlC;AACD;AACJ,KARC;AAAA,cASCP;AATD;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id \n      name\n    }\n  }\n`;\n\nfunction update(cache, payload){\n  console.log(payload);\n  console.log('Running update function after delete');\n  cache.evict(cache.identify(payload.data.deleteProduct))\n}\n\nexport default function DeleteProduct({ id, children }) {\n  const [deleteProduct, { loading }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: { id }, \n    update: update\n  });\n\n  return (\n    <button type=\"button\" \n    disabled={loading}\n    onClick={() => {\n      if ( confirm('Are you sure delete is what you want to do??') ) {\n      //run a delete function\n        console.log(\"DELETING!!!!!!!!\")\n        deleteProduct().catch(err => alert(err.message))\n      }\n  }}>\n    {children}\n  </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}