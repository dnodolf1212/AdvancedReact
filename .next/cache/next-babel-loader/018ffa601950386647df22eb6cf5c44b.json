{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/pages/product/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n  Product(where: {\\n    id: \\\"6068e89a2ea24812864d397e\\\"\\n  }) {\\n    name\\n    price \\n    description\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function SingleProduct(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Just one product my guy \", query.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"sources":["/Users/dwightnodolf/Development/Advanced-React/sick-fits/frontend/pages/product/[id].js"],"names":["useQuery","SINGLE_ITEM_QUERY","gql","SingleProduct","query","data","loading","error","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGC,GAAH,mBAAvB;AAYA,eAAe,SAASC,aAAT,OAAkC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACdJ,QAAQ,EADM;AAAA,MACvCK,IADuC,aACvCA,IADuC;AAAA,MACjCC,OADiC,aACjCA,OADiC;AAAA,MACxBC,KADwB,aACxBA,KADwB;;AAE/C,sBAAO;AAAA,2CAA4BH,KAAK,CAACI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAHuBL,a;UACWH,Q;;;KADXG,a","sourcesContent":["import { useQuery } from \"@apollo/client\"\n\nconst SINGLE_ITEM_QUERY = gql`\n  query {\n  Product(where: {\n    id: \"6068e89a2ea24812864d397e\"\n  }) {\n    name\n    price \n    description\n  }\n}\n`;\n\nexport default function SingleProduct({ query }) {\n  const { data, loading, error } = useQuery();\n  return <p>Just one product my guy {query.id}</p>\n}"]},"metadata":{},"sourceType":"module"}